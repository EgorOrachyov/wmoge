/**********************************************************************************/
/* Wmoge game engine                                                              */
/* Available at github https://github.com/EgorOrachyov/wmoge                      */
/**********************************************************************************/
/* MIT License                                                                    */
/*                                                                                */
/* Copyright (c) 2023 Egor Orachyov                                               */
/*                                                                                */
/* Permission is hereby granted, free of charge, to any person obtaining a copy   */
/* of this software and associated documentation files (the "Software"), to deal  */
/* in the Software without restriction, including without limitation the rights   */
/* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      */
/* copies of the Software, and to permit persons to whom the Software is          */
/* furnished to do so, subject to the following conditions:                       */
/*                                                                                */
/* The above copyright notice and this permission notice shall be included in all */
/* copies or substantial portions of the Software.                                */
/*                                                                                */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     */
/* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       */
/* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    */
/* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         */
/* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  */
/* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  */
/* SOFTWARE.                                                                      */
/**********************************************************************************/

// Autogenerated file by 'generator.py' on 2023-10-18 00:59:10.319027, do not modify

#pragma once

#include "core/string_id.hpp"
#include "core/string_utf.hpp"
#include "core/string_utils.hpp"
#include "gfx/gfx_defs.hpp"
#include "math/mat.hpp"
#include "math/vec.hpp"

namespace wmoge {

    /** @brief Auto generated reflection for 'material' shader */
    struct ShaderMaterial {
        static constexpr const char NAME[]       = "material";
        static constexpr const char CLS[]        = "Material";
        static constexpr int        NUM_FILES    = 2;
        static constexpr int        NUM_CONSTS   = 0;
        static constexpr int        NUM_SAMPLERS = 0;
        static constexpr int        NUM_BUFFERS  = 3;

        struct RenderObjectData {
            Mat4x4f LocalToWorld;
            Mat4x4f LocalToWorldPrev;
            Mat4x4f WorldToLocal;
            Mat4x4f WorldToLocalPrev;
            Mat4x4f NormalMatrix;
            Vec4f   AabbPos;
            Vec4f   AabbSizeHalf;
        };

        struct FrameData {
            float time;
            float timeDelta;
            float _fd_pad0;
            float _fd_pad1;
        };

        static constexpr const int  FRAMEDATA_SET    = 0;
        static constexpr const int  FRAMEDATA_SLOT   = 0;
        static constexpr const auto FRAMEDATA_LOC    = GfxLocation{0, 0};
        static constexpr const char FRAMEDATA_NAME[] = "FrameData";

        struct ViewData {
            Mat4x4f Clip;
            Mat4x4f Proj;
            Mat4x4f View;
            Mat4x4f ProjView;
            Mat4x4f ClipProjView;
            Mat4x4f ProjPrev;
            Mat4x4f ViewPrev;
            Mat4x4f ProjViewPrev;
            Mat4x4f ClipProjViewPrev;
            Vec4f   Movement;
            Vec4f   Position;
            Vec4f   Direction;
            Vec4f   Up;
            Vec4f   PositionPrev;
            Vec4f   DirectionPrev;
            Vec4f   UpPrev;
            Vec4i   Viewport;
            int     CamIdx;
            int     _vd_pad0;
            int     _vd_pad1;
            int     _vd_pad2;
        };

        static constexpr const int  VIEWDATA_SET    = 0;
        static constexpr const int  VIEWDATA_SLOT   = 1;
        static constexpr const auto VIEWDATA_LOC    = GfxLocation{0, 1};
        static constexpr const char VIEWDATA_NAME[] = "ViewData";

        struct RenderObjectsData {
            /* struct RenderObjectData RenderObjects[ UNBOUND ]; */
        };

        static constexpr const int  RENDEROBJECTSDATA_SET    = 0;
        static constexpr const int  RENDEROBJECTSDATA_SLOT   = 2;
        static constexpr const auto RENDEROBJECTSDATA_LOC    = GfxLocation{0, 2};
        static constexpr const char RENDEROBJECTSDATA_NAME[] = "RenderObjectsData";
    };

}// namespace wmoge
