/**********************************************************************************/
/* Wmoge game engine                                                              */
/* Available at github https://github.com/EgorOrachyov/wmoge                      */
/**********************************************************************************/
/* MIT License                                                                    */
/*                                                                                */
/* Copyright (c) 2023 Egor Orachyov                                               */
/*                                                                                */
/* Permission is hereby granted, free of charge, to any person obtaining a copy   */
/* of this software and associated documentation files (the "Software"), to deal  */
/* in the Software without restriction, including without limitation the rights   */
/* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      */
/* copies of the Software, and to permit persons to whom the Software is          */
/* furnished to do so, subject to the following conditions:                       */
/*                                                                                */
/* The above copyright notice and this permission notice shall be included in all */
/* copies or substantial portions of the Software.                                */
/*                                                                                */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     */
/* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       */
/* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    */
/* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         */
/* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  */
/* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  */
/* SOFTWARE.                                                                      */
/**********************************************************************************/

// Autogenerated file by 'generator.py' on 2023-10-28 01:42:02.611456, do not modify

#pragma once

#include "core/string_id.hpp"
#include "core/string_utf.hpp"
#include "core/string_utils.hpp"
#include "gfx/gfx_defs.hpp"
#include "math/mat.hpp"
#include "math/vec.hpp"

namespace wmoge {

    /** @brief Auto generated reflection for 'canvas' shader */
    struct ShaderCanvas {
        static constexpr const char NAME[]       = "canvas";
        static constexpr const char CLS[]        = "Canvas";
        static constexpr int        NUM_FILES    = 2;
        static constexpr int        NUM_CONSTS   = 1;
        static constexpr int        NUM_SAMPLERS = 4;
        static constexpr int        NUM_BUFFERS  = 2;

        struct DrawCmdData {
            Vec4f Transform0;
            Vec4f Transform1;
            Vec4f Transform2;
            Vec4f ClipRect;
            int   TextureIdx;
            int   _dc_pad0;
            int   _dc_pad1;
            int   _dc_pad2;
        };

        static constexpr const auto MAX_CANVAS_IMAGES = 4;

        static constexpr const int  CANVASIMAGE0_SET    = 1;
        static constexpr const int  CANVASIMAGE0_SLOT   = 0;
        static constexpr const auto CANVASIMAGE0_LOC    = GfxLocation{1, 0};
        static constexpr const char CANVASIMAGE0_NAME[] = "CanvasImage0";

        static constexpr const int  CANVASIMAGE1_SET    = 1;
        static constexpr const int  CANVASIMAGE1_SLOT   = 1;
        static constexpr const auto CANVASIMAGE1_LOC    = GfxLocation{1, 1};
        static constexpr const char CANVASIMAGE1_NAME[] = "CanvasImage1";

        static constexpr const int  CANVASIMAGE2_SET    = 1;
        static constexpr const int  CANVASIMAGE2_SLOT   = 2;
        static constexpr const auto CANVASIMAGE2_LOC    = GfxLocation{1, 2};
        static constexpr const char CANVASIMAGE2_NAME[] = "CanvasImage2";

        static constexpr const int  CANVASIMAGE3_SET    = 1;
        static constexpr const int  CANVASIMAGE3_SLOT   = 3;
        static constexpr const auto CANVASIMAGE3_LOC    = GfxLocation{1, 3};
        static constexpr const char CANVASIMAGE3_NAME[] = "CanvasImage3";

        struct Params {
            Mat4x4f ClipProjView;
            float   InverseGamma;
            float   _pr_pad0;
            float   _pr_pad1;
            float   _pr_pad2;
        };

        static constexpr const int  PARAMS_SET    = 0;
        static constexpr const int  PARAMS_SLOT   = 0;
        static constexpr const auto PARAMS_LOC    = GfxLocation{0, 0};
        static constexpr const char PARAMS_NAME[] = "Params";

        struct DrawCmdsData {
            /* struct DrawCmdData DrawCmds[ UNBOUND ]; */
        };

        static constexpr const int  DRAWCMDSDATA_SET    = 0;
        static constexpr const int  DRAWCMDSDATA_SLOT   = 1;
        static constexpr const auto DRAWCMDSDATA_LOC    = GfxLocation{0, 1};
        static constexpr const char DRAWCMDSDATA_NAME[] = "DrawCmdsData";
    };

}// namespace wmoge
