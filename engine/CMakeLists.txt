# declare static engine library
add_library(wmoge STATIC
        engine.hpp
        asset/asset.cpp
        asset/asset.hpp
        asset/asset_import_data.hpp
        asset/asset_loader.hpp
        asset/asset_manager.cpp
        asset/asset_manager.hpp
        asset/asset_meta.hpp
        asset/asset_pak.hpp
        asset/asset_pak_fs.cpp
        asset/asset_pak_fs.hpp
        asset/asset_ref.hpp
        audio/audio_bus.hpp
        audio/audio_defs.hpp
        audio/audio_engine.hpp
        audio/audio_playback.hpp
        audio/audio_stream_wav.cpp
        audio/audio_stream_wav.hpp
        audio/audio_stream.cpp
        audio/audio_stream.hpp
        audio/openal/al_bus.cpp
        audio/openal/al_bus.hpp
        audio/openal/al_defs.cpp
        audio/openal/al_defs.hpp
        audio/openal/al_engine.cpp
        audio/openal/al_engine.hpp
        audio/openal/al_playback.cpp
        audio/openal/al_playback.hpp
        core/array_view.hpp
        core/async.cpp
        core/async.hpp
        core/buffered_vector.hpp
        core/callback_queue.cpp
        core/callback_queue.hpp
        core/class.cpp
        core/class.hpp
        core/cmd_line.cpp
        core/cmd_line.hpp
        core/callback_stream.cpp
        core/callback_stream.hpp
        core/crc32.cpp
        core/crc32.hpp
        core/data.cpp
        core/data.hpp
        core/date_time.cpp
        core/date_time.hpp
        core/flat_map.hpp
        core/flat_set.hpp
        core/log.cpp
        core/log.hpp
        core/mask.hpp
        core/object.cpp
        core/object.hpp
        core/pool_vector.hpp
        core/random.cpp
        core/random.hpp
        core/ref.cpp
        core/ref.hpp
        core/signal.hpp
        core/status.hpp
        core/string_id.cpp
        core/string_id.hpp
        core/string_utf.cpp
        core/string_utf.hpp
        core/string_utils.cpp
        core/string_utils.hpp
        core/synchronization.hpp
        core/task.cpp
        core/task.hpp
        core/task_hnd.hpp
        core/task_manager.cpp
        core/task_manager.hpp
        core/task_parallel_for.cpp
        core/task_parallel_for.hpp
        core/task_runtime.cpp
        core/task_runtime.hpp
        core/timer.cpp
        core/timer.hpp
        core/typed_array.hpp
        core/typed_map.hpp
        core/uuid.cpp
        core/uuid.hpp
        core/var.cpp
        core/var.hpp
        core/weak_ref.cpp
        core/weak_ref.hpp
        ecs/ecs_component.hpp
        ecs/ecs_core.cpp
        ecs/ecs_core.hpp
        ecs/ecs_entity.hpp
        ecs/ecs_memory.cpp
        ecs/ecs_memory.hpp
        ecs/ecs_registry.cpp
        ecs/ecs_registry.hpp
        ecs/ecs_system.hpp
        ecs/ecs_world.cpp
        ecs/ecs_world.hpp
        event/event.cpp
        event/event.hpp
        event/event_listener.hpp
        event/event_manager.cpp
        event/event_manager.hpp
        event/event_action.cpp
        event/event_action.hpp
        event/event_filesystem.cpp
        event/event_filesystem.hpp
        event/event_input.cpp
        event/event_input.hpp
        event/event_script.cpp
        event/event_script.hpp
        event/event_token.cpp
        event/event_token.hpp
        event/event_window.cpp
        event/event_window.hpp
        event/event_asset.cpp
        event/event_asset.hpp
        event/event_scene.cpp
        event/event_scene.hpp
        event/register_classes_event.cpp
        event/register_classes_event.hpp
        gameplay/action_manager.cpp
        gameplay/action_manager.hpp
        gameplay/action_map.cpp
        gameplay/action_map.hpp
        gameplay/game_token_manager.cpp
        gameplay/game_token_manager.hpp
        gfx/gfx_buffers.cpp
        gfx/gfx_buffers.hpp
        gfx/gfx_defs.hpp
        gfx/gfx_desc_set.cpp
        gfx/gfx_desc_set.hpp
        gfx/gfx_ctx.cpp
        gfx/gfx_ctx.hpp
        gfx/gfx_driver.hpp
        gfx/gfx_dynamic_buffers.cpp
        gfx/gfx_dynamic_buffers.hpp
        gfx/gfx_pipeline_cache.cpp
        gfx/gfx_pipeline_cache.hpp
        gfx/gfx_pipeline.cpp
        gfx/gfx_pipeline.hpp
        gfx/gfx_render_pass.cpp
        gfx/gfx_render_pass.hpp
        gfx/gfx_resource.hpp
        gfx/gfx_sampler.cpp
        gfx/gfx_sampler.hpp
        gfx/gfx_shader.hpp
        gfx/gfx_texture.hpp
        gfx/gfx_vector.hpp
        gfx/gfx_vert_format.cpp
        gfx/gfx_vert_format.hpp
        gfx/gfx_vert_format_cache.cpp
        gfx/gfx_vert_format_cache.hpp
        gfx/threaded/gfx_ctx_threaded.hpp
        gfx/threaded/gfx_ctx_wrapper.cpp
        gfx/threaded/gfx_ctx_wrapper.hpp
        gfx/threaded/gfx_driver_threaded.hpp
        gfx/threaded/gfx_driver_wrapper.cpp
        gfx/threaded/gfx_driver_wrapper.hpp
        gfx/threaded/gfx_worker.cpp
        gfx/threaded/gfx_worker.hpp
        gfx/vulkan/vk_buffers.cpp
        gfx/vulkan/vk_buffers.hpp
        gfx/vulkan/vk_cmd_manager.cpp
        gfx/vulkan/vk_cmd_manager.hpp
        gfx/vulkan/vk_ctx.cpp
        gfx/vulkan/vk_ctx.hpp
        gfx/vulkan/vk_defs.cpp
        gfx/vulkan/vk_defs.hpp
        gfx/vulkan/vk_desc_manager.cpp
        gfx/vulkan/vk_desc_manager.hpp
        gfx/vulkan/vk_desc_set.cpp
        gfx/vulkan/vk_desc_set.hpp
        gfx/vulkan/vk_driver.cpp
        gfx/vulkan/vk_driver.hpp
        gfx/vulkan/vk_mem_manager.cpp
        gfx/vulkan/vk_mem_manager.hpp
        gfx/vulkan/vk_pipeline.cpp
        gfx/vulkan/vk_pipeline.hpp
        gfx/vulkan/vk_queues.cpp
        gfx/vulkan/vk_queues.hpp
        gfx/vulkan/vk_render_pass.cpp
        gfx/vulkan/vk_render_pass.hpp
        gfx/vulkan/vk_resource.hpp
        gfx/vulkan/vk_sampler.cpp
        gfx/vulkan/vk_sampler.hpp
        gfx/vulkan/vk_shader.cpp
        gfx/vulkan/vk_shader.hpp
        gfx/vulkan/vk_texture.cpp
        gfx/vulkan/vk_texture.hpp
        gfx/vulkan/vk_vert_format.cpp
        gfx/vulkan/vk_vert_format.hpp
        gfx/vulkan/vk_window.cpp
        gfx/vulkan/vk_window.hpp
        glsl/glsl_include_processor.cpp
        glsl/glsl_include_processor.hpp
        glsl/glsl_shader_compiler.cpp
        glsl/glsl_shader_compiler.hpp
        grc/shader_manager.cpp
        grc/shader_manager.hpp
        grc/shader_param_block.cpp
        grc/shader_param_block.hpp
        grc/shader_param.cpp
        grc/shader_param.hpp
        grc/shader_pass.cpp
        grc/shader_pass.hpp
        grc/shader_reflection.cpp
        grc/shader_reflection.hpp
        grc/shader_builder.cpp
        grc/shader_builder.hpp
        grc/shader.cpp
        grc/shader.hpp
        grc/shader_file.hpp
        grc/texture_compression.cpp
        grc/texture_compression.hpp
        grc/texture_manager.cpp
        grc/texture_manager.hpp
        grc/texture_resize.cpp
        grc/texture_resize.hpp
        hooks/hook_config.hpp
        hooks/hook_engine.hpp
        hooks/hook_logs.hpp
        hooks/hook_profiler.hpp
        hooks/hook_root_remap.hpp
        hooks/hook_uuid_gen.hpp
        io/archive.cpp
        io/archive.hpp
        io/archive_file.cpp
        io/archive_file.hpp
        io/archive_memory.cpp
        io/archive_memory.hpp
        io/base64.cpp
        io/base64.hpp
        io/compression.cpp
        io/compression.hpp
        io/enum.hpp
        io/serialization.hpp
        io/yaml.cpp
        io/yaml.hpp
        material/material.cpp
        material/material.hpp
        math/aabb.hpp
        math/color.cpp
        math/color.hpp
        math/frustum.hpp
        math/mat.hpp
        math/math_utils.cpp
        math/math_utils.hpp
        math/math_utils2d.hpp
        math/math_utils3d.hpp
        math/plane.hpp
        math/quat.hpp
        math/range.hpp
        math/transform.hpp
        math/vec.hpp
        memory/mem_linear.cpp
        memory/mem_linear.hpp
        memory/mem_pool.cpp
        memory/mem_pool.hpp
        mesh/array_mesh.cpp
        mesh/array_mesh.hpp
        mesh/mesh_batch.cpp
        mesh/mesh_batch.hpp
        mesh/mesh_bucket.cpp
        mesh/mesh_bucket.hpp
        mesh/mesh_builder.cpp
        mesh/mesh_builder.hpp
        mesh/mesh_pass.cpp
        mesh/mesh_pass.hpp
        mesh/mesh_processors.cpp
        mesh/mesh_processors.hpp
        mesh/mesh.cpp
        mesh/mesh.hpp
        pfx/pfx_component_runtime.cpp
        pfx/pfx_component_runtime.hpp
        pfx/pfx_component.cpp
        pfx/pfx_component.hpp
        pfx/pfx_effect.cpp
        pfx/pfx_effect.hpp
        pfx/pfx_emitter.cpp
        pfx/pfx_emitter.hpp
        pfx/pfx_feature.cpp
        pfx/pfx_feature.hpp
        pfx/pfx_scene.cpp
        pfx/pfx_scene.hpp
        pfx/pfx_storage.cpp
        pfx/pfx_storage.hpp
        pfx/register_classes_pfx.cpp
        pfx/register_classes_pfx.hpp
        platform/application.cpp
        platform/application.hpp
        platform/dll_manager.cpp
        platform/dll_manager.hpp
        platform/file_system.cpp
        platform/file_system.hpp
        platform/file.hpp
        platform/input.hpp
        platform/input_defs.hpp
        platform/input_devices.hpp
        platform/mount_volume.hpp
        platform/time.cpp
        platform/time.hpp
        platform/window.hpp
        platform/window_manager.hpp
        platform/common/file_physical.cpp
        platform/common/file_physical.hpp
        platform/common/mount_volume_physical.cpp
        platform/common/mount_volume_physical.hpp
        platform/glfw/glfw_input.cpp
        platform/glfw/glfw_input.hpp
        platform/glfw/glfw_input_defs.hpp
        platform/glfw/glfw_input_devices.cpp
        platform/glfw/glfw_input_devices.hpp
        platform/glfw/glfw_window.cpp
        platform/glfw/glfw_window.hpp
        platform/glfw/glfw_window_manager.cpp
        platform/glfw/glfw_window_manager.hpp
        profiler/profiler.cpp
        profiler/profiler.hpp
        render/aux_draw_manager.cpp
        render/aux_draw_manager.hpp
        render/camera.cpp
        render/camera.hpp
        render/canvas.cpp
        render/canvas.hpp
        render/culling.cpp
        render/culling.hpp
        render/deferred_pipeline.cpp
        render/deferred_pipeline.hpp
        render/font.cpp
        render/font.hpp
        render/graphics_pipeline.cpp
        render/graphics_pipeline.hpp
        render/image.cpp
        render/image.hpp
        render/light.cpp
        render/light.hpp
        render/model_instance.cpp
        render/model_instance.hpp
        render/model.cpp
        render/model.hpp
        render/render_engine.cpp
        render/render_engine.hpp
        render/render_queue.cpp
        render/render_queue.hpp
        render/render_scene.cpp
        render/render_scene.hpp
        render/texture.cpp
        render/texture.hpp
        render/view.cpp
        render/view.hpp
        render/view_manager.cpp
        render/view_manager.hpp
        rtti/builtin.hpp
        rtti/class.cpp
        rtti/class.hpp
        rtti/enum.hpp
        rtti/function.hpp
        rtti/meta_data.cpp
        rtti/meta_data.hpp
        rtti/object.cpp
        rtti/object.hpp
        rtti/struct.cpp
        rtti/struct.hpp
        rtti/traits.hpp
        rtti/type_storage.cpp
        rtti/type_storage.hpp
        rtti/type.hpp
        scene/scene_components.cpp
        scene/scene_components.hpp
        scene/scene_data.cpp
        scene/scene_data.hpp
        scene/scene_entity.cpp
        scene/scene_entity.hpp
        scene/scene_manager.cpp
        scene/scene_manager.hpp
        scene/scene_node_props.cpp
        scene/scene_node_props.hpp
        scene/scene_node.cpp
        scene/scene_node.hpp
        scene/scene_packed.cpp
        scene/scene_packed.hpp
        scene/scene_prefab.cpp
        scene/scene_prefab.hpp
        scene/scene_systems.cpp
        scene/scene_systems.hpp
        scene/scene_tree_packed.cpp
        scene/scene_tree_packed.hpp
        scene/scene_tree.cpp
        scene/scene_tree.hpp
        scene/scene.cpp
        scene/scene.hpp
        scene/register_classes_scene.cpp
        scene/register_classes_scene.hpp
        scripting/script_instance.hpp
        scripting/script_native.cpp
        scripting/script_native.hpp
        scripting/script_system.hpp
        scripting/script.cpp
        scripting/script.hpp
        scripting/lua/lua_defs.cpp
        scripting/lua/lua_defs.hpp
        scripting/lua/lua_event_script.cpp
        scripting/lua/lua_event_script.hpp
        scripting/lua/lua_script_instance.cpp
        scripting/lua/lua_script_instance.hpp
        scripting/lua/lua_script.cpp
        scripting/lua/lua_script.hpp
        scripting/lua/lua_script_system.cpp
        scripting/lua/lua_script_system.hpp
        scripting/lua/lua_type_traits.cpp
        scripting/lua/lua_type_traits.hpp
        scripting/lua_bindings/lua_bindings.hpp
        scripting/lua_bindings/lua_bindings_core.cpp
        scripting/lua_bindings/lua_bindings_core.hpp
        scripting/lua_bindings/lua_bindings_event.cpp
        scripting/lua_bindings/lua_bindings_event.hpp
        scripting/lua_bindings/lua_bindings_gameplay.cpp
        scripting/lua_bindings/lua_bindings_gameplay.hpp
        scripting/lua_bindings/lua_bindings_math.cpp
        scripting/lua_bindings/lua_bindings_math.hpp
        scripting/lua_bindings/lua_bindings_platform.cpp
        scripting/lua_bindings/lua_bindings_platform.hpp
        scripting/lua_bindings/lua_bindings_asset.cpp
        scripting/lua_bindings/lua_bindings_asset.hpp
        scripting/lua_bindings/lua_bindings_scene.cpp
        scripting/lua_bindings/lua_bindings_scene.hpp
        system/config_file.cpp
        system/config_file.hpp
        system/engine.cpp
        system/engine.hpp
        system/hook.cpp
        system/hook.hpp
        system/ioc_container.cpp
        system/ioc_container.hpp
        system/layer.cpp
        system/layer.hpp
        system/plugin_manager.cpp
        system/plugin_manager.hpp
        system/plugin.hpp
        debug/console.cpp
        debug/console.hpp
        debug/debug_layer.cpp
        debug/debug_layer.hpp)

# add interface to the engine for plugins
add_library(wmoge_headers INTERFACE)

# specify public include path, so user can reference engine files by modules names
target_include_directories(wmoge_headers INTERFACE ${CMAKE_CURRENT_LIST_DIR}/)

# engine dependencies, which are also visible to the engine users
target_link_libraries(wmoge_headers INTERFACE cxxopts)
target_link_libraries(wmoge_headers INTERFACE tinyxml2)
target_link_libraries(wmoge_headers INTERFACE ryml)
target_link_libraries(wmoge_headers INTERFACE magic_enum)
target_link_libraries(wmoge_headers INTERFACE robin_hood)
target_link_libraries(wmoge_headers INTERFACE svector)
target_link_libraries(wmoge_headers INTERFACE yamc)

# generic functions to setup target
wmoge_target_iface_defs(wmoge_headers)

# engine headers target link to engine library
target_link_libraries(wmoge PUBLIC wmoge_headers)

# engine dependencies, private
target_link_libraries(wmoge PRIVATE glfw)
target_link_libraries(wmoge PRIVATE whereami)
target_link_libraries(wmoge PRIVATE stbimage)
target_link_libraries(wmoge PRIVATE filewatch)
target_link_libraries(wmoge PRIVATE lz4)
target_link_libraries(wmoge PRIVATE compressonator)
target_link_libraries(wmoge PRIVATE base64)
target_link_libraries(wmoge PRIVATE dynalo)

# audio dependencies, private
target_link_libraries(wmoge PRIVATE OpenAL)
target_link_libraries(wmoge PRIVATE audio_file)

# lua scripting dependencies, private
target_link_libraries(wmoge PRIVATE lua_static)
target_link_libraries(wmoge PRIVATE LuaBridge)

# vulkan rendering backend related dependencies, private
target_link_libraries(wmoge PRIVATE volk)
target_link_libraries(wmoge PRIVATE vma)
target_link_libraries(wmoge PRIVATE glslang)
target_link_libraries(wmoge PRIVATE SPIRV)